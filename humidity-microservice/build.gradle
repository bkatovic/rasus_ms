plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '2.7.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2020.0.0")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
 	implementation 'com.sun.jersey.contribs:jersey-apache-client4' 	
  	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.opencsv:opencsv:5.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
  	implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.0'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jib {
	from {
		image = 'openjdk:11.0.5-jre-slim'
	}
	to {
		image = "${project.name}-jib:${version}"
	}
	container {
		appRoot = '/opt'
		ports = ['8081']
		//jvmFlags = [' -Djava.security.egd=file:/dev/./urandom']
	}
	extraDirectories {
    	paths {
      		path {
        		from = '/src/main/resources'
        		into = '/src/main/resources'
      		}
      		path {
      			from = 'src/main/jib'
      		}
		}
		permissions = [
			'/wait-for-it.sh': '755'
		]
	}
}

	
assemble.dependsOn jibDockerBuild

test {
	useJUnitPlatform()
}

processResources {
 	from ('.') {
    	include 'mjerenja.csv'
  	}
 }
